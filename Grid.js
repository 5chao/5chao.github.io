// Generated by CoffeeScript 1.9.2
(function() {
  var Grid, alphabet, count, letter, randomLetter, root, tileCounts, totalTiles;

  tileCounts = {
    A: 9,
    B: 2,
    C: 2,
    D: 4,
    E: 12,
    F: 2,
    G: 3,
    H: 2,
    I: 9,
    J: 1,
    K: 1,
    L: 4,
    M: 2,
    N: 6,
    O: 8,
    P: 2,
    Q: 1,
    R: 6,
    S: 4,
    T: 6,
    U: 4,
    V: 2,
    W: 2,
    X: 1,
    Y: 2,
    Z: 1
  };

  totalTiles = 0;

  for (letter in tileCounts) {
    count = tileCounts[letter];
    totalTiles += count;
  }

  alphabet = ((function() {
    var results;
    results = [];
    for (letter in tileCounts) {
      results.push(letter);
    }
    return results;
  })()).sort();

  randomLetter = function() {
    var i, len, randomNumber, x;
    randomNumber = Math.ceil(Math.random() * totalTiles);
    x = 1;
    for (i = 0, len = alphabet.length; i < len; i++) {
      letter = alphabet[i];
      x += tileCounts[letter];
      if (x > randomNumber) {
        return letter;
      }
    }
  };

  Grid = (function() {
    function Grid() {
      var size, x, y;
      this.size = size = 5;
      this.tiles = (function() {
        var i, ref, results;
        results = [];
        for (x = i = 0, ref = size; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
          results.push((function() {
            var j, ref1, results1;
            results1 = [];
            for (y = j = 0, ref1 = size; 0 <= ref1 ? j < ref1 : j > ref1; y = 0 <= ref1 ? ++j : --j) {
              results1.push(randomLetter());
            }
            return results1;
          })());
        }
        return results;
      })();
    }

    Grid.prototype.inRange = function(x, y) {
      return (0 <= x && x < this.size) && (0 <= y && y < this.size);
    };

    Grid.prototype.swap = function(arg) {
      var ref, x1, x2, y1, y2;
      x1 = arg.x1, y1 = arg.y1, x2 = arg.x2, y2 = arg.y2;
      return ref = [this.tiles[x2][y2], this.tiles[x1][y1]], this.tiles[x1][y1] = ref[0], this.tiles[x2][y2] = ref[1], ref;
    };

    Grid.prototype.rows = function() {
      var i, ref, results, x, y;
      results = [];
      for (x = i = 0, ref = this.size; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
        results.push((function() {
          var j, ref1, results1;
          results1 = [];
          for (y = j = 0, ref1 = this.size; 0 <= ref1 ? j < ref1 : j > ref1; y = 0 <= ref1 ? ++j : --j) {
            results1.push(this.tiles[y][x]);
          }
          return results1;
        }).call(this));
      }
      return results;
    };

    return Grid;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.Grid = Grid;

}).call(this);

//# sourceMappingURL=Grid.js.map
